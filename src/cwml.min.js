var cwmlStyle=document.createElement("style");cwmlStyle.id="cwml-style",document.getElementsByTagName("head")[0].appendChild(cwmlStyle);const cwml={tags:{},registerTag:function($tag,$attrs={},$events={},$props={},$content=""){window.customElements.define($tag.toLowerCase(),class CwmlTag extends HTMLElement{attrs={};events={};content="";initialInner="";constructor(){for(var event_name in super(),this.attrs=$attrs,this.events=$events,this.content=$content,this.initialInner=this.innerHTML,this.events){var event_func=this.events[event_name];event_name.startsWith("__")||this.addEventListener(event_name,(function(e){event_func(e.target)}))}if(""!=this.content){let _content=this.content.replaceAll("{inner}",this.initialInner);if(this.hasAttributes())for(var attr in this.attributes)_content=_content.replaceAll("{"+this.attributes[attr].name+"}",this.attributes[attr].textContent);this.innerHTML=_content}}connectedCallback(){void 0!==this.events.__added__&&this.events.__added__(this)}disconnectedCallback(){void 0!==this.events.__removed__&&this.events.__removed__(this)}adoptedCallback(){void 0!==this.events.__adopted__&&this.events.__adopted__(this)}static get observedAttributes(){let observed=[];return $attrs.constructor==Array?observed=$attrs:$attrs.constructor==Object&&(observed=Object.keys($attrs)),observed.push("cwml-dynamic"),observed}attributeChangedCallback(attrName,oldVal,newVal){if(this.attrs.constructor==Object&&void 0!==this.attrs[attrName]&&this.attrs[attrName](this,oldVal,newVal),!this.hasAttribute("cwml-dynamic")||"false"==this.attributes["cwml-dynamic"]){let _content=this.content.replaceAll("{inner}",this.initialInner);for(var attr in this.attributes)_content=_content.replaceAll("{"+this.attributes[attr].name+"}",this.attributes[attr].value);this.innerHTML=_content}}});var css=$tag+" {";for(var prop in $props)css+=prop+":"+$props[prop]+";";css.includes("display:")||(css+="display: block;"),css+="}\n",document.getElementById("cwml-style").innerText+=css,this.tags[$tag]={attributes:Object.keys($attrs),events:Object.keys($events),props:Object.keys($props),content:$content},void 0!==$events.__init__&&$events.__init__(this)},isTagSupported:function(tag){return void 0!==this.tags[tag]},isAttrSupported:function(tag,attr){return void 0!==this.tags[tag]&&this.tags[tag].attributes.includes(attr)}};
